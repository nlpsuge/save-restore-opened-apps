#!/usr/bin/env bash
# Save the current opened GUI applications.
# And re-open or restore them

location_of_current_opened_apps=~/.current_opened_apps

save()
{
    p_l=$(wmctrl -lp | awk  '{ print $3 }' | sort | uniq)
    for p in $p_l; do
	# query process infomation
        ps -q $p -f --no-headers |
		# Remove first 8 fields, see also: https://backreference.org/2014/10/13/range-of-fields-in-awk/
	       	awk '{sub(/^[[:blank:]]*([^[:blank:]]+[[:blank:]]+){7}/,""); print}' | 
		# Append 'wine' if the command starts with 'SomeLetter:', eg 'C:', assume it is a wine-based application
		awk '{if ($0 ~ /^\w:/) {printf "wine \"" $0 "\""} else {printf $0}; print ""}';
    done > "$location_of_current_opened_apps"
}

restore()
{
    SAVEIFS=$IFS
    IFS=$(echo -en "\n\b")
    for command in $(cat "$location_of_current_opened_apps"); do
	bash -c "nohup  $command &"
    done
    IFS=$SAVEIFS
   
}

list()
{
    echo -n "Location: "
    ls "$location_of_current_opened_apps"
    echo 
    cat "$location_of_current_opened_apps"
}

confirm()
{
    echo -n "Are you sure? [y/N]:"
    read c
    if [ x"$c" = x"N" ]; then
        exit 0
    elif [ x"$c" = x"y" ]; then
	# continue
	return 0
    else
	confirm
    fi
}

if [ x"$1" = x"-s" -o x"$1" = x"--save" ]; then
    confirm
    save
elif [ x"$1" = x"-r" -o x"$1" = x"--restore" ]; then
    confirm
    restore
elif [ x"$1" = x"-l" -o x"$1" = x"--list" ]; then
    list
else
    echo "-s/--save or -r/--restore or -l/--list"
fi
