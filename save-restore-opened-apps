#!/usr/bin/env bash
# Save the current opened GUI applications.
# And re-open or restore them

LOCATION_OF_CURRENT_RUNNING_APPS=~/.current_running_apps

file_exists()
{
    if [ -e "$1" ]; then
        return 0
    else
        return 1
    fi
}

backup_or_create()
{
    file_exists "$LOCATION_OF_CURRENT_RUNNING_APPS"
    if [ $? == 0 ]; then
        # backup the old file
        cp "$LOCATION_OF_CURRENT_RUNNING_APPS" "$LOCATION_OF_CURRENT_RUNNING_APPS".old
    else
        # Also create none existing directories if necessary
        mkdir -p $(dirname "$LOCATION_OF_CURRENT_RUNNING_APPS")
        touch "$LOCATION_OF_CURRENT_RUNNING_APPS"    
    fi
}

save()
{
    backup_or_create

    p_l=$(wmctrl -lp | awk  '{ print $3 }' | sort | uniq)
    for p in $p_l; do
	# query process infomation
        ps -q $p -eo args --no-headers |
		# Append 'wine' if the command starts with 'SomeLetter:', eg 'C:', assume it is a wine-based application
		awk '{if ($0 ~ /^\w:/) {printf "wine \"" $0 "\""} else {printf $0}; print ""}';
    done > "$LOCATION_OF_CURRENT_RUNNING_APPS"
}

restore()
{
    SAVEIFS=$IFS
    IFS=$(echo -en "\n\b")
    for command in $(cat "$LOCATION_OF_CURRENT_RUNNING_APPS"); do
	bash -c "nohup  $command >/dev/null 2>&1 &"
    done
    IFS=$SAVEIFS
   
}

list()
{
    echo -n "Location: "
    ls "$LOCATION_OF_CURRENT_RUNNING_APPS"
    echo 
    cat "$LOCATION_OF_CURRENT_RUNNING_APPS"
}

confirm()
{
    echo -n "Are you sure? [y/N]:"
    read c
    if [ x"$c" = x"N" ]; then
        exit 0
    elif [ x"$c" = x"y" ]; then
	# continue
	return 0
    else
	confirm
    fi
}

if [ x"$1" = x"-s" -o x"$1" = x"--save" ]; then
    confirm
    save
elif [ x"$1" = x"-r" -o x"$1" = x"--restore" ]; then
    confirm
    restore
elif [ x"$1" = x"-l" -o x"$1" = x"--list" ]; then
    list
else
    echo "-s/--save or -r/--restore or -l/--list"
fi
